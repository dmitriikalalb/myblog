# Generated by Django 3.1 on 2020-08-17 09:44

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(default='blog-img-1.jpg', max_length=255, verbose_name='Фото статьи')),
                ('title', models.CharField(max_length=255, verbose_name='Название статьи')),
                ('pub_date', models.DateTimeField(verbose_name='Дата публикации')),
                ('text', models.TextField(verbose_name='Текс статьи')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('is_draft', models.BooleanField(default=True, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(default='blog-avatar-1.png', max_length=255, verbose_name='Фото автора')),
                ('name', models.CharField(max_length=100, verbose_name='Имя автора')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название тега')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=50, verbose_name='Имя автора')),
                ('comment_text', models.CharField(max_length=200, verbose_name='Текст комментария')),
                ('pub_date', models.DateTimeField(default=datetime.datetime(2020, 8, 17, 11, 44, 56, 373458), verbose_name='Дата публикации комментария')),
                ('email', models.CharField(default='unknow@mail.ru', max_length=255, verbose_name='Почта')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.article')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='author_name',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='articles.author'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='articles.category'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag1',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='articles.tag'),
        ),
    ]
